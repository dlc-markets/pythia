name: docker

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: [self-hosted, linux, 'x64']
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: tj-actions/branch-names@v7
        id: branch

      - uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/dlc-markets/pythia
            dlcmarkets/pythia
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=semver,pattern={{version}}
            type=sha
          labels: |
            org.opencontainers.image.title=Pythia
            org.opencontainers.image.vendor=DLC Markets
            org.opencontainers.image.description=A numeric and extensible Oracle for Bitcoin

      - uses: docker/bake-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: build
          set: |
            *.cache-from=type=registry,ref=ghrc.io/dlc-markets/pythia:${{ steps.branch.outputs.current_branch }}-cache
            *.cache-to=type=registry,ref=ghrc.io/dlc-markets/pythia:${{ steps.branch.outputs.current_branch }}-cache,mode=max
